{"version":3,"file":"1-timer-BXWcwkI4.js","sources":["../../src/js/1-timer.js"],"sourcesContent":["import flatpickr from 'flatpickr';\nimport 'flatpickr/dist/flatpickr.min.css';\n\nimport iziToast from 'izitoast';\nimport 'izitoast/dist/css/iziToast.min.css';\n\nconst dateInput = document.querySelector('#datetime-picker');\nconst startBtn = document.querySelector('button[data-start]');\nstartBtn.disabled = true;\nlet selectedDate;\n\nflatpickr(dateInput, {\n  enableTime: true,\n  time_24hr: true,\n  defaultDate: new Date(),\n  minuteIncrement: 1,\n  onClose(selectedDates) {\n    selectedDate = selectedDates[0];\n    if (selectedDate > new Date()) {\n      startBtn.disabled = false;\n    } else {\n      iziToast.warning({\n        title: 'Warning',\n        message: 'Please choose a date in the future',\n        position: 'topRight',\n        timeout: 3000,\n      });\n      startBtn.disabled = true;\n    }\n  },\n});\n\nstartBtn.addEventListener('click', handleClick);\n\nfunction handleClick() {\n  startBtn.disabled = true;\n  dateInput.disabled = true;\n\n  const timerId = setInterval(() => {\n    const now = new Date();\n    const delta = selectedDate - now;\n\n    if (delta <= 0) {\n      clearInterval(timerId);\n      updateTimerDisplay(0, 0, 0, 0);\n      dateInput.disabled = false;\n      return;\n    }\n\n    const time = convertMs(delta);\n    updateTimerDisplay(time.days, time.hours, time.minutes, time.seconds);\n  }, 1000);\n}\n\nfunction convertMs(ms) {\n  const second = 1000;\n  const minute = second * 60;\n  const hour = minute * 60;\n  const day = hour * 24;\n\n  const days = Math.floor(ms / day);\n  const hours = Math.floor((ms % day) / hour);\n  const minutes = Math.floor((ms % hour) / minute);\n  const seconds = Math.floor((ms % minute) / second);\n\n  return { days, hours, minutes, seconds };\n}\n\nfunction updateTimerDisplay(days, hours, minutes, seconds) {\n  document.querySelector('[data-days]').textContent = addLeadingZero(days);\n  document.querySelector('[data-hours]').textContent = addLeadingZero(hours);\n  document.querySelector('[data-minutes]').textContent =\n    addLeadingZero(minutes);\n  document.querySelector('[data-seconds]').textContent =\n    addLeadingZero(seconds);\n}\n\nfunction addLeadingZero(value) {\n  return String(value).padStart(2, '0');\n}\n"],"names":["dateInput","startBtn","selectedDate","flatpickr","selectedDates","iziToast","handleClick","timerId","delta","updateTimerDisplay","time","convertMs","ms","days","hours","minutes","seconds","addLeadingZero","value"],"mappings":"2CAMA,MAAMA,EAAY,SAAS,cAAc,kBAAkB,EACrDC,EAAW,SAAS,cAAc,oBAAoB,EAC5DA,EAAS,SAAW,GACpB,IAAIC,EAEJC,EAAUH,EAAW,CACnB,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACjB,QAAQI,EAAe,CACrBF,EAAeE,EAAc,CAAC,EAC1BF,EAAe,IAAI,KACrBD,EAAS,SAAW,IAEpBI,EAAS,QAAQ,CACf,MAAO,UACP,QAAS,qCACT,SAAU,WACV,QAAS,GACjB,CAAO,EACDJ,EAAS,SAAW,GAEvB,CACH,CAAC,EAEDA,EAAS,iBAAiB,QAASK,CAAW,EAE9C,SAASA,GAAc,CACrBL,EAAS,SAAW,GACpBD,EAAU,SAAW,GAErB,MAAMO,EAAU,YAAY,IAAM,CAEhC,MAAMC,EAAQN,EADF,IAAI,KAGhB,GAAIM,GAAS,EAAG,CACd,cAAcD,CAAO,EACrBE,EAAmB,EAAG,EAAG,EAAG,CAAC,EAC7BT,EAAU,SAAW,GACrB,MACD,CAED,MAAMU,EAAOC,EAAUH,CAAK,EAC5BC,EAAmBC,EAAK,KAAMA,EAAK,MAAOA,EAAK,QAASA,EAAK,OAAO,CACrE,EAAE,GAAI,CACT,CAEA,SAASC,EAAUC,EAAI,CAMrB,MAAMC,EAAO,KAAK,MAAMD,EAAK,KAAG,EAC1BE,EAAQ,KAAK,MAAOF,EAAK,MAAO,IAAI,EACpCG,EAAU,KAAK,MAAOH,EAAK,KAAQ,GAAM,EACzCI,EAAU,KAAK,MAAOJ,EAAK,IAAU,GAAM,EAEjD,MAAO,CAAE,KAAAC,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,CACxC,CAEA,SAASP,EAAmBI,EAAMC,EAAOC,EAASC,EAAS,CACzD,SAAS,cAAc,aAAa,EAAE,YAAcC,EAAeJ,CAAI,EACvE,SAAS,cAAc,cAAc,EAAE,YAAcI,EAAeH,CAAK,EACzE,SAAS,cAAc,gBAAgB,EAAE,YACvCG,EAAeF,CAAO,EACxB,SAAS,cAAc,gBAAgB,EAAE,YACvCE,EAAeD,CAAO,CAC1B,CAEA,SAASC,EAAeC,EAAO,CAC7B,OAAO,OAAOA,CAAK,EAAE,SAAS,EAAG,GAAG,CACtC"}